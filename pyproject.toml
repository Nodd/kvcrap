[project]
name = "crapette"
description = "A crapette card playing game, made with kivy and love."
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Kivy",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Games/Entertainment :: Board Games",
]
keywords = ["game", "cards", "crapette"]
requires-python = ">=3.10"
dependencies = ["kivy>=1.10", "line-profiler>=4.0"]
dynamic = ["version"]

[[project.authors]]
name = "Joseph Martinot-Lagarde"
email = "contrebasse+kvcrap@gmail.com"

[project.readme]
file = "README.rst"
content-type = "text/x-rst"

[project.license]
text = "GPLv3"

[project.urls]
Homepage = "https://github.com/Nodd/kvcrap"
"Bug Tracker" = "https://github.com/Nodd/kvcrap/issues"
Github = "https://github.com/Nodd/kvcrap"

[project.optional-dependencies]
build = ["pyinstaller>=4.0"]
test = ["pytest", "pytest-cov"]

[project.gui-scripts]
crapette = "crapette.crapette:main"

[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["crapette"]
zip-safe = false
include-package-data = true
license-files = ["LICENSE"]

[tool.setuptools.package-data]
crapette = ["crapette.kv", "images/png/*/*.png"]

[tool.setuptools.dynamic.version]
attr = "crapette.__version__"

[tool.pytest.ini_options]
minversion = "6.0"
pythonpath = "src"         # Pytest >= 7.0, otherwise use PYTHONPATH=src pytest
addopts = "--cov crapette"
testpaths = ["tests"]

[tool.ruff]
src = ["src", "tests"]
select = [
    "F",
    "E",
    "W",
    # "C90",
    "I",
    "N",
    "D",
    "UP",
    "YTT",
    # "ANN", # Missing type annotations
    "ASYNC",
    "S",
    "BLE",
    # "FBT", # Boolean traps
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "T10",
    "DJ",
    "EM",
    "EXE",
    "FA",
    "ISC",
    "ICN",
    "G",
    "INP",
    "PIE",
    # "T20",# print/pprint found
    "PYI",
    "PT",
    "Q",
    "RSE",
    "RET",
    # "SLF", # SLF001 Private member accessed
    "SIM",
    "TID",
    "TCH",
    "INT",
    "ARG",
    "PTH",
    # "TD", # TODOs
    # "ERA", # Found commented-out code
    # "PD#, # Pandas
    "PGH",
    "PL",
    "TRY",
    "FLY",
    # "NPY", # Numpy
    "RUF",
]
ignore = [
    "E501",    # Line too long
    "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
    "S101",    # Use of `assert` detected
    "COM812",  # Trailing comma missing
    "ARG002",  # Unused method argument
    "ARG005",  # Unused lambda argument
    "PLR2004", # Magic value used in comparison, consider replacing with a constant variable
    "D1",      # Missing docstring
    "D203",    # one-blank-line-before-class incompatible with no-blank-line-before-class
    "D213",    # multi-line-summary-second-line incompatible with multi-line-summary-first-line
]
